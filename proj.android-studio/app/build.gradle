apply plugin: 'com.android.application'

android {
    compileSdkVersion 16
    buildToolsVersion "20"

    defaultConfig {
        applicationId "com.dreamlike.games.laser"
        minSdkVersion 16
        versionCode 1
        versionName "1.0"

        ndk {
            abiFilters 'armeabi'/*, 'armeabi-v7a', 'mips', 'x86'*/
        }
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "assets"
        jni.srcDirs = []
    }

    signingConfigs {

       release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
            signingConfig signingConfigs.release
        }
    }

    /*
    productFlavors {
        armeabi {
            versionNameSuffix "-debug_v"
        }
    }
    */

    externalNativeBuild {
        ndkBuild {
            path 'jni/Android.mk'
        }
    }

    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles  += file('proguard-rules.txt')
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':libcocos2dx')
}

task cleanAssets(type: Delete) {
    delete 'assets'
}
task copyAssets(type: Copy) {
    from '../../Resources'
    into 'assets'
}

clean.dependsOn cleanAssets
preBuild.dependsOn copyAssets
